/*******************************************************************************
    CANopen Object Dictionary definition for CANopenNode V4

    This file was automatically generated by CANopenEditor v4.2.1

    https://github.com/CANopenNode/CANopenNode
    https://github.com/CANopenNode/CANopenEditor

    DON'T EDIT THIS FILE MANUALLY !!!!
********************************************************************************

    File info:
        File Names:   OD.h; OD.c
        Project File: XCPEP MOTOR.xdd
        File Version: 1

        Created:      2024/7/8 15:16:00
        Created By:   XCPEP
        Modified:     2024/7/10 15:32:48
        Modified By:  XCPEP

    Device Info:
        Vendor Name:  XCPEP
        Vendor ID:    0x00000000
        Product Name: XCPEP MOTOR V1.0
        Product ID:   0x00000000

        Description:  XCPEP MOTOR EDS
*******************************************************************************/

#ifndef OD_H
#define OD_H
/*******************************************************************************
    Counters of OD objects
*******************************************************************************/
#define OD_CNT_NMT 1
#define OD_CNT_EM 1
#define OD_CNT_SYNC 1
#define OD_CNT_SYNC_PROD 1
#define OD_CNT_STORAGE 1
#define OD_CNT_TIME 1
#define OD_CNT_EM_PROD 1
#define OD_CNT_HB_CONS 1
#define OD_CNT_HB_PROD 1
#define OD_CNT_SDO_SRV 1
#define OD_CNT_RPDO 4
#define OD_CNT_TPDO 4


/*******************************************************************************
    Sizes of OD arrays
*******************************************************************************/
#define OD_CNT_ARR_1003 16
#define OD_CNT_ARR_1010 4
#define OD_CNT_ARR_1011 4
#define OD_CNT_ARR_1016 8
#define OD_CNT_ARR_1029 2


/*******************************************************************************
    OD data declaration of all groups
*******************************************************************************/
typedef struct {
    uint32_t x1000_deviceType;
    uint32_t x1005_COB_ID_SYNCMessage;
    uint32_t x1006_communicationCyclePeriod;
    uint32_t x1007_synchronousWindowLength;
    char x1008_manufacturerDeviceName[4];
    char x1009_manufacturerHardwareVersion[5];
    char x100A_manufacturerSoftwareVersion[5];
    uint16_t x100C_guardTime;
    uint8_t x100D_lifeTimeFactor;
    uint32_t x1012_COB_IDTimeStampObject;
    uint32_t x1014_COB_ID_EMCY;
    uint16_t x1015_inhibitTimeEMCY;
    uint8_t x1016_consumerHeartbeatTime_sub0;
    uint32_t x1016_consumerHeartbeatTime[OD_CNT_ARR_1016];
    uint16_t x1017_producerHeartbeatTime;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t vendor_ID;
        uint32_t productCode;
        uint32_t revisionNumber;
        uint32_t serialNumber;
    } x1018_identity;
    uint8_t x1029_errorBehaviorObject_sub0;
    uint8_t x1029_errorBehaviorObject[OD_CNT_ARR_1029];
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByRPDO;
        uint8_t transmissionType;
        uint16_t eventTimer;
    } x1400_RPDOCommunicationParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByRPDO;
        uint8_t transmissionType;
        uint16_t eventTimer;
    } x1401_RPDOCommunicationParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByRPDO;
        uint8_t transmissionType;
        uint16_t eventTimer;
    } x1402_RPDOCommunicationParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByRPDO;
        uint8_t transmissionType;
        uint16_t eventTimer;
    } x1403_RPDOCommunicationParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1600_RPDOMappingParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1601_RPDOMappingParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1602_RPDOMappingParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1603_RPDOMappingParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByTPDO;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint16_t eventTimer;
        uint8_t SYNCStartValue;
    } x1800_TPDOCommunicationParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByTPDO;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint16_t eventTimer;
        uint8_t SYNCStartValue;
    } x1801_TPDOCommunicationParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByTPDO;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint16_t eventTimer;
        uint8_t SYNCStartValue;
    } x1802_TPDOCommunicationParameter;
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDUsedByTPDO;
        uint8_t transmissionType;
        uint16_t inhibitTime;
        uint16_t eventTimer;
        uint8_t SYNCStartValue;
    } x1803_TPDOCommunicationParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1A00_TPDOMappingParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1A01_TPDOMappingParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1A02_TPDOMappingParameter;
    struct {
        uint8_t numberOfMappedApplicationObjectsInPDO;
        uint32_t applicationObject1;
        uint32_t applicationObject2;
        uint32_t applicationObject3;
        uint32_t applicationObject4;
        uint32_t applicationObject5;
        uint32_t applicationObject6;
        uint32_t applicationObject7;
        uint32_t applicationObject8;
    } x1A03_TPDOMappingParameter;
} OD_PERSIST_COMM_t;

typedef struct {
    uint8_t x1001_errorRegister;
    uint32_t x1002_manufacturerStatusRegister;
    uint8_t x1010_storeParameters_sub0;
    uint32_t x1010_storeParameters[OD_CNT_ARR_1010];
    uint8_t x1011_restoreDefaultParameters_sub0;
    uint32_t x1011_restoreDefaultParameters[OD_CNT_ARR_1011];
    struct {
        uint8_t highestSub_indexSupported;
        uint32_t COB_IDClientToServerRx;
        uint32_t COB_IDServerToClientTx;
    } x1200_SDOServerParameter;
    struct {
        uint8_t numberOfElements;
        int16_t motorSN;
        uint32_t customizedMotorSN;
        uint32_t encoderVersion;
        uint32_t encoderType;
    } x2000_motorParameters;
    uint16_t x603F_errorCode;
    uint16_t x6040_controlword;
    uint16_t x6041_statusword;
    int8_t x6060_modesOfOperation;
    int8_t x6061_modesOfOperationDisplay;
    int32_t x6062_positionDemanndValue;
    int32_t x6064_positionActualValue;
    uint32_t x6065_maximalFollowingError;
    uint32_t x6067_positionWindow;
    uint16_t x6068_positionWindowTime;
    int32_t x6069_velocitySensorActualValue;
    int32_t x606B_velocityDemandValue;
    int32_t x606C_velocityActualValue;
    int16_t x6078_currentActualValue;
    int32_t x607A_targetPosition;
    int32_t x607C_homeOffset;
    struct {
        uint8_t numberOfEntries;
        int32_t minimalPositionLimit;
        int32_t maximalPositionLimit;
    } x607D_softwarePositionLimit;
    uint32_t x607F_maximalProfileVelocity;
    uint32_t x6081_profileVelocity;
    uint32_t x6083_profileAcceleration;
    uint32_t x6084_profileDeceleration;
    uint32_t x6085_quickStopDeceleration;
    int16_t x6086_motionProfileType;
    int8_t x6089_positionNotationIndex;
    float32_t x608A_positionDimentionIndex;
    int8_t x608B_velocityNotationIndex;
    float32_t x608C_velocityDimentionIndex;
    int8_t x608D_acceleraionNotationIndex;
    float32_t x608E_acceleraionDimentionIndex;
    int8_t x6098_homingMethod;
    struct {
        uint8_t numberOfEntries;
        uint32_t speedForSwitchSearch;
        uint32_t speedForZeroSearch;
    } x6099_homingSpeeds;
    uint32_t x609A_homingAcceleration;
    struct {
        uint8_t numberOfEntries;
        int16_t currentRegulatorP_gain;
        int16_t currentRegulatorI_gain;
    } x60F6_currentControlParameterSet;
    struct {
        uint8_t numberOfEntries;
        int16_t velocityRegulatorP_gain;
        int16_t velocityRegulatorI_gain;
    } x60F9_velocityControlParameterSet;
    struct {
        uint8_t numberOfEntries;
        int16_t positionRegulatorP_gain;
        int16_t positionRegulatorI_gain;
        int16_t positionRegulatorD_gain;
        uint16_t velocityFeedForwardFactor;
        uint16_t accelerationFeedForwardFactor;
    } x60FB_positionControlParameterSet;
    int32_t x60FF_targetVelocity;
    uint16_t x6402_motorType;
    struct {
        uint8_t numberOfEntries;
        uint16_t continousCurrentLimit;
        uint16_t outputCurrentLimit;
        uint8_t polePairNumber;
        uint16_t maximalSpeedInCurrentMode;
        uint16_t thermalTimeConstantWinding;
    } x6410_motorData;
    uint32_t x6502_supportedDriveModes;
} OD_RAM_t;

#ifndef OD_ATTR_PERSIST_COMM
#define OD_ATTR_PERSIST_COMM
#endif
extern OD_ATTR_PERSIST_COMM OD_PERSIST_COMM_t OD_PERSIST_COMM;

#ifndef OD_ATTR_RAM
#define OD_ATTR_RAM
#endif
extern OD_ATTR_RAM OD_RAM_t OD_RAM;

#ifndef OD_ATTR_OD
#define OD_ATTR_OD
#endif
extern OD_ATTR_OD OD_t *OD;


/*******************************************************************************
    Object dictionary entries - shortcuts
*******************************************************************************/
#define OD_ENTRY_H1000 &OD->list[0]
#define OD_ENTRY_H1001 &OD->list[1]
#define OD_ENTRY_H1002 &OD->list[2]
#define OD_ENTRY_H1003 &OD->list[3]
#define OD_ENTRY_H1005 &OD->list[4]
#define OD_ENTRY_H1006 &OD->list[5]
#define OD_ENTRY_H1007 &OD->list[6]
#define OD_ENTRY_H1008 &OD->list[7]
#define OD_ENTRY_H1009 &OD->list[8]
#define OD_ENTRY_H100A &OD->list[9]
#define OD_ENTRY_H100C &OD->list[10]
#define OD_ENTRY_H100D &OD->list[11]
#define OD_ENTRY_H1010 &OD->list[12]
#define OD_ENTRY_H1011 &OD->list[13]
#define OD_ENTRY_H1012 &OD->list[14]
#define OD_ENTRY_H1014 &OD->list[15]
#define OD_ENTRY_H1015 &OD->list[16]
#define OD_ENTRY_H1016 &OD->list[17]
#define OD_ENTRY_H1017 &OD->list[18]
#define OD_ENTRY_H1018 &OD->list[19]
#define OD_ENTRY_H1029 &OD->list[20]
#define OD_ENTRY_H1200 &OD->list[21]
#define OD_ENTRY_H1400 &OD->list[22]
#define OD_ENTRY_H1401 &OD->list[23]
#define OD_ENTRY_H1402 &OD->list[24]
#define OD_ENTRY_H1403 &OD->list[25]
#define OD_ENTRY_H1600 &OD->list[26]
#define OD_ENTRY_H1601 &OD->list[27]
#define OD_ENTRY_H1602 &OD->list[28]
#define OD_ENTRY_H1603 &OD->list[29]
#define OD_ENTRY_H1800 &OD->list[30]
#define OD_ENTRY_H1801 &OD->list[31]
#define OD_ENTRY_H1802 &OD->list[32]
#define OD_ENTRY_H1803 &OD->list[33]
#define OD_ENTRY_H1A00 &OD->list[34]
#define OD_ENTRY_H1A01 &OD->list[35]
#define OD_ENTRY_H1A02 &OD->list[36]
#define OD_ENTRY_H1A03 &OD->list[37]
#define OD_ENTRY_H2000 &OD->list[38]
#define OD_ENTRY_H603F &OD->list[39]
#define OD_ENTRY_H6040 &OD->list[40]
#define OD_ENTRY_H6041 &OD->list[41]
#define OD_ENTRY_H6060 &OD->list[42]
#define OD_ENTRY_H6061 &OD->list[43]
#define OD_ENTRY_H6062 &OD->list[44]
#define OD_ENTRY_H6064 &OD->list[45]
#define OD_ENTRY_H6065 &OD->list[46]
#define OD_ENTRY_H6067 &OD->list[47]
#define OD_ENTRY_H6068 &OD->list[48]
#define OD_ENTRY_H6069 &OD->list[49]
#define OD_ENTRY_H606B &OD->list[50]
#define OD_ENTRY_H606C &OD->list[51]
#define OD_ENTRY_H6078 &OD->list[52]
#define OD_ENTRY_H607A &OD->list[53]
#define OD_ENTRY_H607C &OD->list[54]
#define OD_ENTRY_H607D &OD->list[55]
#define OD_ENTRY_H607F &OD->list[56]
#define OD_ENTRY_H6081 &OD->list[57]
#define OD_ENTRY_H6083 &OD->list[58]
#define OD_ENTRY_H6084 &OD->list[59]
#define OD_ENTRY_H6085 &OD->list[60]
#define OD_ENTRY_H6086 &OD->list[61]
#define OD_ENTRY_H6089 &OD->list[62]
#define OD_ENTRY_H608A &OD->list[63]
#define OD_ENTRY_H608B &OD->list[64]
#define OD_ENTRY_H608C &OD->list[65]
#define OD_ENTRY_H608D &OD->list[66]
#define OD_ENTRY_H608E &OD->list[67]
#define OD_ENTRY_H6098 &OD->list[68]
#define OD_ENTRY_H6099 &OD->list[69]
#define OD_ENTRY_H609A &OD->list[70]
#define OD_ENTRY_H60F6 &OD->list[71]
#define OD_ENTRY_H60F9 &OD->list[72]
#define OD_ENTRY_H60FB &OD->list[73]
#define OD_ENTRY_H60FF &OD->list[74]
#define OD_ENTRY_H6402 &OD->list[75]
#define OD_ENTRY_H6410 &OD->list[76]
#define OD_ENTRY_H6502 &OD->list[77]


/*******************************************************************************
    Object dictionary entries - shortcuts with names
*******************************************************************************/
#define OD_ENTRY_H1000_deviceType &OD->list[0]
#define OD_ENTRY_H1001_errorRegister &OD->list[1]
#define OD_ENTRY_H1002_manufacturerStatusRegister &OD->list[2]
#define OD_ENTRY_H1003_pre_definedErrorField &OD->list[3]
#define OD_ENTRY_H1005_COB_ID_SYNCMessage &OD->list[4]
#define OD_ENTRY_H1006_communicationCyclePeriod &OD->list[5]
#define OD_ENTRY_H1007_synchronousWindowLength &OD->list[6]
#define OD_ENTRY_H1008_manufacturerDeviceName &OD->list[7]
#define OD_ENTRY_H1009_manufacturerHardwareVersion &OD->list[8]
#define OD_ENTRY_H100A_manufacturerSoftwareVersion &OD->list[9]
#define OD_ENTRY_H100C_guardTime &OD->list[10]
#define OD_ENTRY_H100D_lifeTimeFactor &OD->list[11]
#define OD_ENTRY_H1010_storeParameters &OD->list[12]
#define OD_ENTRY_H1011_restoreDefaultParameters &OD->list[13]
#define OD_ENTRY_H1012_COB_IDTimeStampObject &OD->list[14]
#define OD_ENTRY_H1014_COB_ID_EMCY &OD->list[15]
#define OD_ENTRY_H1015_inhibitTimeEMCY &OD->list[16]
#define OD_ENTRY_H1016_consumerHeartbeatTime &OD->list[17]
#define OD_ENTRY_H1017_producerHeartbeatTime &OD->list[18]
#define OD_ENTRY_H1018_identity &OD->list[19]
#define OD_ENTRY_H1029_errorBehaviorObject &OD->list[20]
#define OD_ENTRY_H1200_SDOServerParameter &OD->list[21]
#define OD_ENTRY_H1400_RPDOCommunicationParameter &OD->list[22]
#define OD_ENTRY_H1401_RPDOCommunicationParameter &OD->list[23]
#define OD_ENTRY_H1402_RPDOCommunicationParameter &OD->list[24]
#define OD_ENTRY_H1403_RPDOCommunicationParameter &OD->list[25]
#define OD_ENTRY_H1600_RPDOMappingParameter &OD->list[26]
#define OD_ENTRY_H1601_RPDOMappingParameter &OD->list[27]
#define OD_ENTRY_H1602_RPDOMappingParameter &OD->list[28]
#define OD_ENTRY_H1603_RPDOMappingParameter &OD->list[29]
#define OD_ENTRY_H1800_TPDOCommunicationParameter &OD->list[30]
#define OD_ENTRY_H1801_TPDOCommunicationParameter &OD->list[31]
#define OD_ENTRY_H1802_TPDOCommunicationParameter &OD->list[32]
#define OD_ENTRY_H1803_TPDOCommunicationParameter &OD->list[33]
#define OD_ENTRY_H1A00_TPDOMappingParameter &OD->list[34]
#define OD_ENTRY_H1A01_TPDOMappingParameter &OD->list[35]
#define OD_ENTRY_H1A02_TPDOMappingParameter &OD->list[36]
#define OD_ENTRY_H1A03_TPDOMappingParameter &OD->list[37]
#define OD_ENTRY_H2000_motorParameters &OD->list[38]
#define OD_ENTRY_H603F_errorCode &OD->list[39]
#define OD_ENTRY_H6040_controlword &OD->list[40]
#define OD_ENTRY_H6041_statusword &OD->list[41]
#define OD_ENTRY_H6060_modesOfOperation &OD->list[42]
#define OD_ENTRY_H6061_modesOfOperationDisplay &OD->list[43]
#define OD_ENTRY_H6062_positionDemanndValue &OD->list[44]
#define OD_ENTRY_H6064_positionActualValue &OD->list[45]
#define OD_ENTRY_H6065_maximalFollowingError &OD->list[46]
#define OD_ENTRY_H6067_positionWindow &OD->list[47]
#define OD_ENTRY_H6068_positionWindowTime &OD->list[48]
#define OD_ENTRY_H6069_velocitySensorActualValue &OD->list[49]
#define OD_ENTRY_H606B_velocityDemandValue &OD->list[50]
#define OD_ENTRY_H606C_velocityActualValue &OD->list[51]
#define OD_ENTRY_H6078_currentActualValue &OD->list[52]
#define OD_ENTRY_H607A_targetPosition &OD->list[53]
#define OD_ENTRY_H607C_homeOffset &OD->list[54]
#define OD_ENTRY_H607D_softwarePositionLimit &OD->list[55]
#define OD_ENTRY_H607F_maximalProfileVelocity &OD->list[56]
#define OD_ENTRY_H6081_profileVelocity &OD->list[57]
#define OD_ENTRY_H6083_profileAcceleration &OD->list[58]
#define OD_ENTRY_H6084_profileDeceleration &OD->list[59]
#define OD_ENTRY_H6085_quickStopDeceleration &OD->list[60]
#define OD_ENTRY_H6086_motionProfileType &OD->list[61]
#define OD_ENTRY_H6089_positionNotationIndex &OD->list[62]
#define OD_ENTRY_H608A_positionDimentionIndex &OD->list[63]
#define OD_ENTRY_H608B_velocityNotationIndex &OD->list[64]
#define OD_ENTRY_H608C_velocityDimentionIndex &OD->list[65]
#define OD_ENTRY_H608D_acceleraionNotationIndex &OD->list[66]
#define OD_ENTRY_H608E_acceleraionDimentionIndex &OD->list[67]
#define OD_ENTRY_H6098_homingMethod &OD->list[68]
#define OD_ENTRY_H6099_homingSpeeds &OD->list[69]
#define OD_ENTRY_H609A_homingAcceleration &OD->list[70]
#define OD_ENTRY_H60F6_currentControlParameterSet &OD->list[71]
#define OD_ENTRY_H60F9_velocityControlParameterSet &OD->list[72]
#define OD_ENTRY_H60FB_positionControlParameterSet &OD->list[73]
#define OD_ENTRY_H60FF_targetVelocity &OD->list[74]
#define OD_ENTRY_H6402_motorType &OD->list[75]
#define OD_ENTRY_H6410_motorData &OD->list[76]
#define OD_ENTRY_H6502_supportedDriveModes &OD->list[77]


/*******************************************************************************
    OD config structure
*******************************************************************************/
#ifdef CO_MULTIPLE_OD
#define OD_INIT_CONFIG(config) {\
    (config).CNT_NMT = OD_CNT_NMT;\
    (config).ENTRY_H1017 = OD_ENTRY_H1017;\
    (config).CNT_HB_CONS = OD_CNT_HB_CONS;\
    (config).CNT_ARR_1016 = OD_CNT_ARR_1016;\
    (config).ENTRY_H1016 = OD_ENTRY_H1016;\
    (config).CNT_EM = OD_CNT_EM;\
    (config).ENTRY_H1001 = OD_ENTRY_H1001;\
    (config).ENTRY_H1014 = OD_ENTRY_H1014;\
    (config).ENTRY_H1015 = OD_ENTRY_H1015;\
    (config).CNT_ARR_1003 = OD_CNT_ARR_1003;\
    (config).ENTRY_H1003 = OD_ENTRY_H1003;\
    (config).CNT_SDO_SRV = OD_CNT_SDO_SRV;\
    (config).ENTRY_H1200 = OD_ENTRY_H1200;\
    (config).CNT_SDO_CLI = 0;\
    (config).ENTRY_H1280 = NULL;\
    (config).CNT_TIME = OD_CNT_TIME;\
    (config).ENTRY_H1012 = OD_ENTRY_H1012;\
    (config).CNT_SYNC = OD_CNT_SYNC;\
    (config).ENTRY_H1005 = OD_ENTRY_H1005;\
    (config).ENTRY_H1006 = OD_ENTRY_H1006;\
    (config).ENTRY_H1007 = OD_ENTRY_H1007;\
    (config).ENTRY_H1019 = NULL;\
    (config).CNT_RPDO = OD_CNT_RPDO;\
    (config).ENTRY_H1400 = OD_ENTRY_H1400;\
    (config).ENTRY_H1600 = OD_ENTRY_H1600;\
    (config).CNT_TPDO = OD_CNT_TPDO;\
    (config).ENTRY_H1800 = OD_ENTRY_H1800;\
    (config).ENTRY_H1A00 = OD_ENTRY_H1A00;\
    (config).CNT_LEDS = 0;\
    (config).CNT_GFC = 0;\
    (config).ENTRY_H1300 = NULL;\
    (config).CNT_SRDO = 0;\
    (config).ENTRY_H1301 = NULL;\
    (config).ENTRY_H1381 = NULL;\
    (config).ENTRY_H13FE = NULL;\
    (config).ENTRY_H13FF = NULL;\
    (config).CNT_LSS_SLV = 0;\
    (config).CNT_LSS_MST = 0;\
    (config).CNT_GTWA = 0;\
    (config).CNT_TRACE = 0;\
}
#endif

#endif /* OD_H */
